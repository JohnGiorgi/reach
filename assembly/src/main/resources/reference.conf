#
# Configuration file for reach-assembly
#

# number of simultaneous threads to use for parallelization
#threadLimit = 2

# settings for assembly
assembly {
  # assembly can be run directly over a directory of papers (see ReachCLI) set by the papersDir property
  #
  # assembly output (outDir) is in the form of json or tsv files:
  #
  # TSV-style output
  # Currently, two tsv files are produced for each paper:
  # 1. assembly matching MITRE's (March 2016) requirements
  # 2. unconstrained
  #
  # Additionally, two output files are produced to show assembly across all papers:
  # 1. assembly matching MITRE's (March 2016) requirements
  # 2. unconstrained

  # consider pairs of mentions within N sentences of one another
  windowSize = 1

  corpus {
    # mentions with these labels may form an annotation pair
    validLabels = ["ComplexEvent", "Binding"]
    # a relation corpus (json)
    corpusDir = ${HOME}/Downloads/causal-assembly
    # directory of json files (doc + mentions)
    jsonDir = ${HOME}/Downloads/causal-assembly/mention-data

    constraints {
      # the minimum number of equiv event pairs needed per paper
      # for inclusion of the event pair in the corpus
      minSeen = 2
      # PMIDs included in the train partition of the assembly corpus.
      # The test partition of the corpus should be built from different papers
      skip
    }
  }

  # assembly relation classifier
  classifier {

    # what algorithm to use?
    classifier = lin-svm-l1

    # the trained model file (for reading and writing)
    # NOTE: do not put a leading slash.
    # This is loaded from the class path by the classLoader
    model = org/clulab/reach/assembly/fbc.model # this is a lin-svm-l1 model

    # report of results
    results = results.tsv
  }

  # serialized gold PrecedenceRelations for evaluation
  evalGold = evalGold.ser

  # serialized mentions prior to applying rule-based sieves
  evalMentions = evalMentions.ser

  # allow additional information output
  verbose = true
}


akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  #log-config-on-start = on
  # http://rerun.me/2014/09/29/akka-notes-logging-and-testing/
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  #loglevel = OFF
  loglevel = DEBUG
  #stdout-loglevel = OFF
  log-dead-letters = OFF
  //io.TcpListener = DEBUG

  http {
    server {
      port = 8888
      host = localhost # 0.0.0.0
      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle connection timeouts.
      idle-timeout = 20 minutes

      # The time period within which the TCP binding process must be completed.
      # Set to `infinite` to disable.
      bind-timeout = 1s
      request-timeout = 10 minutes
    }

    client {
      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle timeouts.
      idle-timeout = 20 minutes

    }
  }
}