# assembly sub-tree moved to main taxonomy
# these rules make use of labels that exist in that taxonomy
# rather than duplicate it here, the assembly branch was grafted there
taxonomy: edu/arizona/sista/reach/biogrammar/taxonomy.yml

# vars for assembly sieve
vars:
  mylabel: "Assembly"
  deprulepriority: "1"
  surfacerulepriority: "2"
  # < operator should be outside of regex
  incomingbeforetimeprep: "</^prep_(before|prior_to)$/"
  incomingaftertimeprep: "</^prep_(after|following)$/"
  incomingtype: "Event"
  # "after" should be some kind of Event that transforms "before"
  outgoingtype: "Event"
  beforesurface: "[lemma=/^(before|prior|precede)$/]"
  aftersurface: "[lemma=/^follow|after$/]"

# rules for assembly sieve
rules:
  # Event rules
  - name: assembly-prep-syntax-1
    label: ${mylabel}
    priority: ${deprulepriority}
    example: "A is ubiquitinated before the phosphorylation of B."
    pattern: |
      before:${outgoingtype}
      # before the X
      after:${incomingtype} = ${incomingbeforetimeprep}

  - name: assembly-prep-syntax-2
    label: ${mylabel}
    priority: ${deprulepriority}
    example: "A is ubiquitinated following the phosphorylation of B."
    pattern: |
      after:${incomingtype}
      # after X
      before:${outgoingtype} = ${incomingaftertimeprep}

  - name: assembly-prep-syntax-3
    label: DirectConnection
    priority: ${deprulepriority}
    example: "A is ubiquitinated due to the phosphorylation of B."
    pattern: |
      before:${outgoingtype}
      after:${incomingtype} = <prep_due_to | <prep_because_of

  - name: assembly-verb-syntax-1
    label: DirectConnection
    priority: ${deprulepriority}
    example: "the ubiquitination of A leads to the phosphorylation of B."
    pattern: |
      before:${outgoingtype}
      after:${incomingtype} = <nsubj [lemma=/^(lead)$/] prep_to

  - name: assembly-verb-syntax-2
    label: DirectConnection
    priority: ${deprulepriority}
    example: "the ubiquitination of A precedes the phosphorylation of B."
    pattern: |
      before:${outgoingtype}
      after:${incomingtype} = <nsubj [lemma=/^(precede)$/] dobj

  - name: assembly-verb-syntax-3
    label: DirectConnection
    priority: ${deprulepriority}
    example: "the ubiquitination of A causes the phosphorylation of B."
    pattern: |
      after:${incomingtype}
      before:${outgoingtype} = <nsubj [lemma=/^(precipitate|cause|follow)$/] dobj

  - name: assembly-syntax-pass-1
    label: DirectConnection
    priority: ${deprulepriority}
    example: "the ubiquitination of A is followed by the phosphorylation of B."
    pattern: |
      before:${outgoingtype}
      after:${incomingtype} = <nsubjpass [lemma=/^(precipitate|cause|follow)$/] agent

  - name: assembly-syntax-pass-2
    label: DirectConnection
    priority: ${deprulepriority}
    example: "the ubiquitination of A is preceded by the phosphorylation of B."
    pattern: |
      after:${incomingtype}
      before:${outgoingtype} = <nsubjpass [lemma=/^(precede)$/] agent

  # finds a direct connection
  - name: assembly-surface-1
    example: "A is ubiquitination immediately follows the phosphorylation of B. A is ubiquitinated immediately following the phosphorylation of B.  A ubiquitination is immediately followed by the phosphorylation of B."
    label: DirectConnection
    type: token
    priority: ${surfacerulepriority}
    pattern: |
      # "A precedes B" pattern
      @before:${incomingtype} [lemma=be]? [lemma=/^immediate|direct$/] ${beforesurface} [tag=IN]? [tag=DT]? @after:${outgoingtype}
      |
      # "A follows B" pattern
      @before:${incomingtype} [lemma=be]? [lemma=/^immediate|direct$/] ${aftersurface} [tag=IN]? [tag=DT]? @after:${outgoingtype}

  # finds a direct connection
  - name: assembly-surface-2
    example: "A is ubiquitinated following the phosphorylation of B.  A is ubiquitinated prior to the phosphorylation of B."
    label: ${mylabel}
    type: token
    priority: ${surfacerulepriority}
    pattern: |
      # "A precedes B" pattern
      @before:${incomingtype} [lemma=be]? ${aftersurface} [tag=IN]? [tag=DT]? @after:${outgoingtype}
      |
      # "A follows B" pattern
      @before:${incomingtype} [lemma=be]? ${beforesurface} [tag=IN]? [tag=DT]? @after:${outgoingtype}

  - name: assembly-surface-3
    example: "A is ubiquitinated in response to the phosphorylation of B."
    label: ${mylabel}
    type: token
    priority: ${surfacerulepriority}
    pattern: |
     @after:${outgoingtype} in response to []{,2} @before:${incomingtype}

  - name: assembly-surface-4
    example: "X ubiquitination has downstream effects on the phosphorylation of Y."
    label: ${mylabel}
    type: token
    priority: ${surfacerulepriority}
    pattern: |
     # NOTE: event "A has no effect on B" implies A before B
     @before:${incomingtype} [lemma=have] []{,2} [lemma=effect] on []{,2} @after:${outgoingtype}