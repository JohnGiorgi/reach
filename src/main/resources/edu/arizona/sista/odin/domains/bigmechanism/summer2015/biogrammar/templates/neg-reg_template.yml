
#
# Template for negative regulation|activation
#

- name: Negative_{{ ruleType }}_syntax_1_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (dobj | xcomp) /conj|dep|cc|nn|prep_of/* (/./ [word=by])*
    controller:{{ controllerType }} = <xcomp? (nsubj | agent | <vmod) [!lemma=/{{ negnouns }}/] /appos|nn|conj_|cc|prep_of/*


- name: Negative_{{ ruleType }}_syntax_2_verb
  priority: {{ priority }}
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (>nsubjpass|<vmod) /conj_|nn|cc/*  
    controller:{{ controllerType }} = (agent|prep_by) [!lemma=/{{ negnouns }}/] /conj_|nn|cc|prep_of/*


- name: Negative_{{ ruleType }}_syntax_3_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & !outgoing=nsubjpass & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = ( (/pobj|prep_[^b]|conj_|nn/+) | (< /pobj|prep_|conj_|nn/+) )
    controller:{{ controllerType }} = <nn* | (prep_by) [!lemma=/{{ negnouns }}/] /nn|conj_|cc|prep_of/*


- name: Negative_{{ ruleType }}_syntax_4_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (nsubjpass /conj_|nn/*) 
    controller:{{ controllerType }} = (/prep_/ /conj_|nn/*)? /prep_/* /prep_by|agent/ [!lemma=/{{ negnouns }}/] /conj_|nn/*


- name: Negative_{{ ruleType }}_syntax_5_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = dobj /nn|conj_|cc/*
    controller:{{ controllerType }} = (< /xcomp|rcmod|appos/)+ /appos|nn|conj_|cc/*


- name: Negative_{{ ruleType }}_syntax_6_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/VBN|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^VBN/]?
    controlled:{{ controlledType }} = (< /xcomp|rcmod|appos/)+ /appos|nn|conj_|cc/*
    controller:{{ controllerType }} = /prep_by|agent/ [!lemma=/{{ negnouns }}/] /appos|nn|conj_|cc|prep_of/*


- name: Negative_{{ ruleType }}_syntax_1_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/]?
    controlled:{{ controlledType }} = prep_of /nn|conj_|cc/*
    controller:{{ controllerType }} = (<dobj (prep_by|agent)|nn|prep_of prep_by) [!lemma=/{{ negnouns }}/] /nn|conj_|cc/*


- name: Negative_{{ ruleType }}_syntax_2_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = prep_of? /conj_|cc|nn/+ 
    controller:{{ controllerType }} = /prep_by|agent/ [!lemma=/{{ negnouns }}/] /conj|cc|nn/*


- name: Negative_{{ ruleType }}_syntax_3_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/ & !outgoing=prep_by] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = prep_of /conj_|cc|nn/+ 
    controller:{{ controllerType }} = /conj_|cc|nn/+

- name: Negative_{{ ruleType }}_syntax_5_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = < nn > /prep_/ /conj_|cc|nn/* 
    controller:{{ controllerType }} = < nn /conj_|cc|nn/*


- name: Negative_{{ ruleType }}_syntax_6_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controller:{{ controllerType }} = <prep_via (agent|prep_by) [!lemma=/{{ negnouns }}/] /nn|conj_|cc/*
    controlled:{{ controlledType }} = (prep_of /nn|conj_|cc/*)+


- name: Negative_{{ ruleType }}_token_2_verb
  priority: {{ priority }}
  example: ""
  type: token
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    (?<trigger> [word=increased & !tag=/^JJ/]) @controlled:{{ controlledType }} following @controller:{{ controllerType }} [lemma=/{{ negnouns}}/]


- name: Negative_{{ ruleType }}_copula_1
  priority: {{ priority }}
  example: "A is an inhibitor of B"
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [lemma=/be/ & tag=/^V/] /./? /./? [lemma=/{{ negnouns }}/ & tag=/^N/]
    controller:{{ controllerType }} = nsubj
    controlled:{{ controlledType }} = prep_of


#
# These contain instances of positive regulation triggers coupled with negative nouns
#

- name: Negative_{{ ruleType }}_syntax_1_verb_negnoun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ postriggers }}/ & tag=/^V|RB/] [lemma=/(?i){{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (dobj | xcomp) /conj|dep|cc|nn/* (/./ [word=by])*
    controller:{{ controllerType }} = <xcomp? (nsubj | agent | <vmod) [lemma=/{{ negnouns }}/] /appos|nn|conj_|cc|prep_of/+


- name: Negative_{{ ruleType }}_syntax_2_verb_negnoun
  priority: {{ priority }}
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ postriggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (>nsubjpass|<vmod) /conj_|nn|cc/*
    controller:{{ controllerType }} = (agent|prep_by) [lemma=/{{ negnouns }}/] /conj_|nn|cc|appos|prep_of/+


