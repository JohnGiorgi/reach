
#
# Template for positive regulation|activation
#

- name: Positive_{{ ruleType }}_syntax_1_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = prepc_by? (dobj | xcomp) /conj|dep|cc|nn|prep_of|prep_in/{,2} (/./ [word=by]){,2}
    controller:{{ controllerType }} = <xcomp? (nsubj | agent | <vmod) /appos|nn|conj_|cc|prep_of|prep_in/{,2}


- name: Positive_{{ ruleType }}_syntax_1b_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [lemma=/^positive/] [lemma="regulate" & !tag=/^JJ/] # moved "constraint: advmod [word=/^positive/]" here
    controlled:{{ controlledType }} = dobj nn{,2}
    controller:{{ controllerType }} = <xcomp? (nsubj | agent) nn{,2}


- name: Positive_{{ ruleType }}_syntax_2_verb
  priority: {{ priority }}
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (>nsubjpass|<vmod) /conj_|nn|cc/{,2}
    controller:{{ controllerType }} = (agent|prep_by) /conj_|nn|cc|prep_of|prep_in/{,2}


- name: Positive_{{ ruleType }}_syntax_3_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & !outgoing=nsubjpass & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = ( (/pobj|prep_[^b]|conj_|nn/{,2}) | (< /pobj|prep_|conj_|nn/{1,2}) )
    controller:{{ controllerType }} = <nn{,2} | (prep_by) /nn|conj_|cc/{,2}


- name: Positive_{{ ruleType }}_syntax_4_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = (nsubjpass /conj_|nn/{,2})
    controller:{{ controllerType }} = (/prep_/ /conj_|nn/{,2})? /prep_/{,2} /prep_by|agent/ /conj_|nn/{,2}


- name: Positive_{{ ruleType }}_syntax_5_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^V|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^V/]?
    controlled:{{ controlledType }} = dobj /nn|conj_|cc/{,2}
    controller:{{ controllerType }} = (< /xcomp|rcmod|appos/){1,2} /appos|nn|conj_|cc/{,2}


- name: Positive_{{ ruleType }}_syntax_6_verb
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/VBN|RB/] [lemma=/{{ auxtriggers }}/ & tag=/^VBN/]?
    controlled:{{ controlledType }} = (< /xcomp|rcmod|appos/){1,2} /appos|nn|conj_|cc/{,2}
    controller:{{ controllerType }} = /prep_by|agent/ /appos|nn|conj_|cc/{,2}


- name: Positive_{{ ruleType }}_syntax_1_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/]?
    controlled:{{ controlledType }} = /prep_of||prep_in/ /nn|conj_|cc/{,2}
    controller:{{ controllerType }} = (<dobj /prep_by|agent|nn|prep_of|prep_in/ prep_by) /nn|conj_|cc/{,2}


- name: Positive_{{ ruleType }}_syntax_2_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = /prep_of||prep_in/? /conj_|cc|nn/{1,2}
    controller:{{ controllerType }} = /prep_by|agent/ /conj|cc|nn/{,2}


- name: Positive_{{ ruleType }}_syntax_3_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/ & !outgoing=prep_by] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = /prep_of||prep_in/ /conj_|cc|nn/{1,2}
    controller:{{ controllerType }} = /conj_|cc|nn/{1,2}


- name: Positive_{{ ruleType }}_syntax_5_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = < nn > /prep_/ /conj_|cc|nn/{,2}
    controller:{{ controllerType }} = < nn /conj_|cc|nn/{,2}


- name: Positive_{{ ruleType }}_syntax_6_noun
  priority: {{ priority }}
  example: ""
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [word=/(?i){{ triggers }}/ & tag=/^N/] [lemma=/{{ auxtriggers }}/ & tag=/^N/]?
    controlled:{{ controlledType }} = (/prep_of|prep_in/ /nn|conj_|cc/{,2}){1,2}
    controller:{{ controllerType }} = <prep_via (agent|prep_by) /nn|conj_|cc/{,2}


- name: Positive_{{ ruleType }}_token_1_verb
  priority: {{ priority }}
  example: ""
  type: token
  label: [{{ labels }}]
  example: "monoubiquitinated K-Ras is less sensitive than the unmodified protein to GAP-mediated GTP hydrolysis"
  action: {{ actionFlow }}
  pattern: |
    (@controller:{{ controllerType }})? (?<trigger> [word=/^mediat/ & !tag=/^JJ/]) @controlled:{{ controlledType }}


- name: Positive_{{ ruleType }}_token_2_verb
  priority: {{ priority }}
  example: ""
  type: token
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    (?<trigger> [word=increased & !tag=/^JJ/]) @controlled:{{ controlledType }} following @controller:{{ controllerType }} (?! [lemma=/{{ negnouns}}/])


- name: Positive_{{ ruleType }}_copula_1
  priority: {{ priority }}
  example: "A is an activator of B"
  label: [{{ labels }}]
  action: {{ actionFlow }}
  pattern: |
    trigger = [lemma=/be/ & tag=/^V/] /./? /./? [lemma=/{{ posnouns }}/ & tag=/^N/]
    controller:{{ controllerType }} = nsubj
    controlled:{{ controlledType }} = /prep_of|prep_in/


